/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import dataModel.artistModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author ADMIN
 */
public class artistCard extends javax.swing.JPanel {

    /**
     * Creates new form artistCard
     */
    private boolean selected;
    private String artistName;
    private String imgURL;
    
    private artistModel data;
    
    public boolean isSelected() {
        return selected;
    }
    
    public void setSelected(boolean selected) {
        this.selected = selected;
    }
    
    public artistCard(artistModel data) {
        this.data = data;
        artistName = data.getName();
        imgURL = data.getAvatarLink();
        initComponents();
        initLayout();
        initEventHandling();
    }
    
    public void initLayout() {
        setLayout(new BorderLayout());
    setPreferredSize(new Dimension(200, 250));
    setOpaque(false);

    try {
        ImageIcon originalIcon = new ImageIcon(new URL(imgURL));
        Image originalImage = originalIcon.getImage();

        int width = 200;
        int height = 250;
        Image scaledImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);

        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        JLabel imageLabel = new JLabel(scaledIcon);

        // Use GridBagLayout for better control over centering
        JPanel textPanel = new JPanel(new GridBagLayout());

        JLabel nameLabel = new JLabel(artistName);
        nameLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // Set font size

        JButton detailsButton = new JButton("Details");
        detailsButton.setOpaque(false);
        detailsButton.setContentAreaFilled(false);
        detailsButton.setBorderPainted(false);

        // Add an ActionListener to the button to open the details popup
        detailsButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        showArtistDetailsPopup();
                    }
                });
            }
        });

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        textPanel.add(nameLabel, gbc);

        gbc.gridy = 1;
        textPanel.add(detailsButton, gbc);

        add(imageLabel, BorderLayout.CENTER);
        add(textPanel, BorderLayout.SOUTH);
    } catch (Exception e) {
        System.err.println("Failed to load image from URL: " + e.getMessage());
        e.printStackTrace();
    }
    }
    
    private void showArtistDetailsPopup() {
    ArtistDetailsPopup popup = new ArtistDetailsPopup(data);
    popup.setVisible(true);
}
    
    private void initEventHandling() {
        // Add a mouse click event listener to open the artist details popup
        this.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        showArtistDetailsPopup();
                    }
                });
            }
        });
    }
    
    public void setData(artistModel data){
        this.data = data;
        artistName = data.getName();
        imgURL = data.getAvatarLink();
        repaint(); // Repaint when data changes
    }

    @Override
    public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g.create();

        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(Color.white);
        //g2.fillRoundRect(0, 0, getWidth(), getHeight(), 4, 4);

        g2.dispose();
        super.paint(g);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(32767, 300));
        setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
