/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import dataModel.ArtworkModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author ADMIN
 */
public class ArtworkCard extends javax.swing.JPanel {

    /**
     * Creates new form ArtworkCard
     */
    private boolean selected;
    private String artistName;
    private String artworkTitle;
    private int creationYear;
    private String imgURL;

    private ArtworkModel data;

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }

    public ArtworkCard(ArtworkModel data) {
        this.data = data;
        artistName = data.getArtistName();
        artworkTitle = data.getTitle();
        creationYear = data.getCreationYear();
        imgURL = data.getImageURL();
        initComponents();
        initLayout();
        initEventHandling();
    }

    public void initLayout() {
        setLayout(new BorderLayout());
        setPreferredSize(new Dimension(200, 250));
        setOpaque(false);

        try {
            ImageIcon originalIcon = new ImageIcon(new URL(imgURL));
            Image originalImage = originalIcon.getImage();

            int width = 200;
            int height = 250;
            Image scaledImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);

            ImageIcon scaledIcon = new ImageIcon(scaledImage);
            JLabel imageLabel = new JLabel(scaledIcon);

            JPanel textPanel = new JPanel(new GridBagLayout());

            JLabel artistLabel = new JLabel("Artist: " + artistName);
            artistLabel.setFont(new Font("Trebuchet MS", Font.BOLD, 14));

            JLabel titleLabel = new JLabel("Title: " + artworkTitle);
            titleLabel.setFont(new Font("Trebuchet MS", Font.BOLD, 14));

            JLabel yearLabel = new JLabel("Year: " + creationYear);
            yearLabel.setFont(new Font("Trebuchet MS", Font.BOLD, 14));

            JButton detailsButton = new JButton("Details");
            detailsButton.setOpaque(false);
            detailsButton.setContentAreaFilled(false);
            detailsButton.setBorderPainted(false);

            detailsButton.addActionListener((ActionEvent e) -> SwingUtilities.invokeLater(this::showArtworkDetailsPopup));

            GridBagConstraints gbc = new GridBagConstraints();
            gbc.gridx = 0;
            gbc.gridy = 0;
            textPanel.add(artistLabel, gbc);

            gbc.gridy = 1;
            textPanel.add(titleLabel, gbc);

            gbc.gridy = 2;
            textPanel.add(yearLabel, gbc);

            gbc.gridy = 3;
            textPanel.add(detailsButton, gbc);

            add(imageLabel, BorderLayout.CENTER);
            add(textPanel, BorderLayout.SOUTH);
        } catch (Exception e) {
            System.err.println("Failed to load image from URL: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void showArtworkDetailsPopup() {
        ArtworkDetailsPopup popup = new ArtworkDetailsPopup(data);
        popup.setVisible(true);
    }

    private void initEventHandling() {
        addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SwingUtilities.invokeLater(ArtworkCard.this::showArtworkDetailsPopup);
            }
        });
    }

    public void setData(ArtworkModel data) {
        this.data = data;
        artistName = data.getArtistName();
        artworkTitle = data.getTitle();
        creationYear = data.getCreationYear();
        imgURL = data.getImageURL();
        repaint();
    }

    @Override
    public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g.create();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(Color.white);
        g2.dispose();
        super.paint(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMaximumSize(new java.awt.Dimension(32767, 300));
        setMinimumSize(new java.awt.Dimension(200, 250));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
